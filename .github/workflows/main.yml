name: Build
on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - main
      - develop

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      uid_gid: ${{ steps.get-user.outputs.uid_gid }}
    steps:
      - id: get-user
        run: echo "uid_gid=$(id -u):$(id -g)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install deps
        run: |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 10
          make deps
      - run: make cpp_test

  build_only_rust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install deps
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: rustfmt
        run: |
          cd ./app/rust
          cargo fmt --version
          cargo fmt -- --check
      - name: clippy
        run: |
          cd ./app/rust
          cargo clippy --version
          cargo clippy --all-features --all-targets || true
#      - name: audit
#        run: |
#          cd ./app/rust
#          cargo audit --version
#          cargo audit
      - name: run tests
        run: |
          cd ./app/rust
          cargo test
  build_ledger:
    needs: configure
    runs-on: ubuntu-latest
    container:
      image: zondax/ledger-app-builder:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    env:
      BOLOS_SDK: /opt/nanos-secure-sdk
    outputs:
      size: ${{steps.build.outputs.size}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build Standard app
        id: build
        shell: bash -l {0}
        run: |
          make
  build_ledger_val:
    needs: configure
    runs-on: ubuntu-latest
    container:
      image: zondax/ledger-app-builder:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    env:
      BOLOS_SDK: /opt/nanos-secure-sdk
    outputs:
      size: ${{steps.build.outputs.size}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build Standard app
        id: build
        shell: bash -l {0}
        run: |
          COIN=oasis_validator make
  test_zemu:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install node
        uses: actions/setup-node@v3
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build and run zemu tests
        run: |
          make test_all
  test_zemu_adr0008-0:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install node
        uses: actions/setup-node@v3
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build and run zemu tests
        run: |
          make test_prepare
          COIN=adr0008-0 make zemu_test
  test_zemu_adr0008-0-oasis:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install node
        uses: actions/setup-node@v3
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build and run zemu tests
        run: |
          make test_prepare
          COIN=adr0008-0-oasis make zemu_test
  test_zemu_adr0008-5:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install node
        uses: actions/setup-node@v3
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build and run zemu tests
        run: |
          make test_prepare
          COIN=adr0008-5 make zemu_test
  test_zemu_adr0014:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install node
        uses: actions/setup-node@v3
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build and run zemu tests
        run: |
          make test_prepare
          COIN=adr0014 make zemu_test
  test_zemu_eth:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install node
        uses: actions/setup-node@v3
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build and run zemu tests
        run: |
          make test_prepare
          COIN=eth make zemu_test
  test_zemu_val:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: |
          id
          echo $HOME
          echo $DISPLAY
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - run: sudo apt-get update -y && sudo apt-get install -y libusb-1.0.0 libudev-dev
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install node
        uses: actions/setup-node@v3
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Build and run zemu tests
        run: |
          make build_val
          make zemu_install
          COIN=val make zemu_test

  build_package_nanos:
    needs: [ configure, build, build_ledger, test_zemu ]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    container:
      image: zondax/ledger-app-builder:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    env:
      BOLOS_SDK: /opt/nanos-secure-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install deps
        run: pip install ledgerblue

      - name: Build NanoS
        shell: bash -l {0}
        run: |
          make
          mv ./app/pkg/installer_s.sh ./app/pkg/installer_nanos.sh

      - name: Set tag
        id: nanos
        run: echo "tag_name=$(./app/pkg/installer_nanos.sh version)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release_0
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          files: ./app/pkg/installer_nanos.sh
          tag_name: ${{ steps.nanos.outputs.tag_name }}
          draft: false
          prerelease: false

  build_package_nanos_plus:
    needs: [ configure, build, build_ledger, test_zemu ]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    container:
      image: zondax/ledger-app-builder:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    env:
      BOLOS_SDK: /opt/nanosplus-secure-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install deps
        run: pip install ledgerblue

      - name: Build NanoSP
        shell: bash -l {0}
        run: |
          make
          mv ./app/pkg/installer_s2.sh ./app/pkg/installer_nanos_plus.sh

      - name: Set tag
        id: nanosp
        run: echo "tag_name=$(./app/pkg/installer_nanos_plus.sh version)" >> $GITHUB_OUTPUT

      - name: Update Release
        id: create_release_0
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          files: ./app/pkg/installer_nanos_plus.sh
          tag_name: ${{ steps.nanosp.outputs.tag_name }}
          draft: false
          prerelease: false

  build_package_validator:
    needs: [ configure, build, build_ledger_val, test_zemu_val ]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    container:
      image: zondax/ledger-app-builder:latest
      options: --user ${{ needs.configure.outputs.uid_gid }}
    env:
      BOLOS_SDK: /opt/nanosplus-secure-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install deps
        run: pip install ledgerblue

      - name: Build NanoS validator
        shell: bash -l {0}
        run: |
          COIN=oasis_validator make
          mv ./app/pkg/installer_s.sh ./app/pkg/installer_nanos_validator.sh

      - name: Set tag
        id: nanos_val
        run: echo ::set-output name=tag_name::$(./app/pkg/installer_nanos_validator.sh version)

      - name: Update Release
        id: create_release_1
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          files: ./app/pkg/installer_nanos_validator.sh
          tag_name: ${{ steps.nanos_val.outputs.tag_name }}
          draft: false
          prerelease: false
